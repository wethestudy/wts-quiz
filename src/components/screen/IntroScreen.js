import React, { useEffect, useState } from 'react';
import { url } from '../../links';
import { useDispatch, useSelector } from "react-redux";
import { fetchQuizData } from '../../store/thunk';
import { sendCloseModalMessage } from '../../store/uiSlice';
import Card from '../main/Card';
import Button from '../main/Button';
import Slider from '../main/Slider';
import Timer from '../main/Timer';
import Header from '../sub/header';
import QuizTitle from '../sub/quizTitle';
import Footer from '../sub/footer';
import Guideline from '../sub/guideline';
import { Resources } from '../sub/resources';
import {ReactComponent as AIGenerated} from '../../assets/icons/fi-sr-brain-circuit.svg'
import {ReactComponent as Time} from '../../assets/icons/fi-sr-time-quarter-to.svg'
import {ReactComponent as Quit} from '../../assets/icons/029-disable.svg'
import {ReactComponent as Repeat} from '../../assets/icons/fi-sr-arrows-repeat.svg'
import introScreenStyles from './styles/introscreen.module.css'
import quizScreenStyles from './styles/quizscreen.module.css'

function IntroScreen() {
    const dispatch = useDispatch();
    const questions = useSelector(state => state.data.quizData);
    const treeID = useSelector(state => state.tree.treeID);
    const numQuestions = useSelector(state => state.quiz.numQuestions);
    const postTypes = useSelector(state => state.quiz.quizTypes);
    const treeName = useSelector(state => state.tree.treeName);
    const treeEdition = useSelector(state => state.tree.treeEdition);
    const treePostType = useSelector(state => state.tree.treePostType);
    const masteredArticlesID = useSelector(state => state.member.masteredArticlesID);
    const passingRate = useSelector(state => state.quiz.passingRate);

    let [header, setHeader] = useState(null)
    let [body, setBody] = useState(null)
    let [footer, setFooter] = useState(null)

    const renderScreen= () => {
      if(treePostType !== "Crossroad"){
        if(!masteredArticlesID.includes(treeID)){
          setHeader(mainHeader)
          setBody(mainBody)
          setFooter(mainFooter)
        } else {
          setHeader(altMainHeader)
          setBody(mainBody)
          setFooter(mainFooter)
        }
      } else {
        setHeader(automaticHeader)
        setBody(automaticBody)
        setFooter(automaticFooter)
      }
    }

    useEffect(()=>{
      renderScreen()
    },[treeName, treeEdition, treePostType])

    const onNext = () => {
      dispatch(fetchQuizData(treeID, postTypes, numQuestions));
    };

    const onMain = () => {
      renderScreen()
    }

    const onTutorial = () => {
      setHeader(tutorialHeader)
      setBody(tutorialBody)
      setFooter(tutorialFooter)
    }

    const onClose = () => {
      dispatch(sendCloseModalMessage())
    }

    const onCloseUpdate = () => {
      window.parent.postMessage(treeID, `${url}`);
      dispatch(sendCloseModalMessage())
    }

    let mainHeader = <Header text={"Are you ready?"}/>;
    let altMainHeader = <Header text={"You've already mastered this node."}/>;
    let mainBody = <div className={`${introScreenStyles["body-wrapper"]}`}>
      <QuizTitle text={"You will now take a quiz on:"} title={`${treeName}, Ed. ${treeEdition}`}/>
      <div className={`${introScreenStyles["guideline-card-wrapper"]}`}>
        <Guideline
          image={<div style={{fontSize: "2rem", fontWeight: "bold"}}>{passingRate}%</div>}
          title={"Passing Rate"} 
          text={`Correctly answer ${passingRate}% of the total number of questions to pass.`}
        />
        <Guideline
          image={<Time
            width={"4rem"}
            height={"4rem"}
            />}
          title={"Time Limited"} 
          text={"You're only given a specific period of time to answer the quiz."}
        />
        <Guideline
          image={<Quit
            width={"4rem"}
            height={"4rem"}
            />}
          title={"Quitting"} 
          text={"Closing the browser or tab will automatically forfeit the quiz."}
        />
        <Guideline
          image={<Repeat
            width={"4rem"}
            height={"4rem"}
            />}
          title={"Repeat"} 
          text={"You can retake this quiz as many times as you'd like (even after mastering it)."}
        />
        <Guideline
          image={<AIGenerated
            width={"4rem"}
            height={"4rem"}
            />}
          title={"AI-Generated"} 
          text={"Some of the questions and answers were generated by AI and verified by the WeTheStudy team"}
        />
      </div>
      <div>
        <div>Passing this quiz will let you <b>master this node</b>. Click on <b>“Let’s Go!”</b> to start. <br/><b>Do not close on the loading screen! Your records may not register.</b></div>
      </div>
      <Resources/>
    </div>
    let mainFooter = <Footer left={<><Button text={"Let's Go!"} onClick={onNext}/><Button text={"Tutorial"} type={"secondary"} onClick={onTutorial}/></>} right={<Button text={"Cancel"} onClick={onClose}/>}/>

    let automaticHeader = <Header text={"You've mastered this node! (for now)"}/>
    let automaticBody = <div className={introScreenStyles['automatic-body-wrapper']}>
      <QuizTitle text="This node is:" title={`${treeName}, Ed. ${treeEdition}`}/>
      <div className={introScreenStyles['automatic-body-end-wrapper']}>
        When we update content on this post, you'll have to take a quiz to master it. <br/>
        Click “OK” to register this node as “Mastered.”
        <Resources/>
      </div>
    </div>
    let automaticFooter = <Footer left={<><Button text={"OK"} onClick={onCloseUpdate}/></>}/>

    let tutorialHeader = <div>
      <Timer initSeconds={15} disable={true}/>
      <div className={introScreenStyles['tutorial-header']}>1. As you begin the quiz, the timer automatically starts. When it reaches zero, the quiz ends regardless whether you have not completed answering the quiz.</div>
    </div>
    let tutorialBody = <div className={quizScreenStyles['quiz-wrapper']}>
      <Slider questionArray={questions}/>
      <div className={introScreenStyles['tutorial-body']}>2. The question and answer will be displayed here. Click on the choices to choose your answer. To navigate to other questions, click on the left and right arrows on the side.</div>
    </div>
    let tutorialFooter = <div>
      <Footer left={<Button text={"Finish Quiz"} onClick={onMain}/>} right={<Button text={"Close Tutorial"} type={"secondary"} onClick={onMain}/>}/>
      <div className={introScreenStyles['tutorial-footer']}>3. Click on "Finish Quiz" and confirm afterwards to submit your answers. Your results will be displayed at the end.</div>
    </div>

    return (
        <div>
            <Card header={header} body={body} footer={footer}/>
        </div>
    );
}

export default IntroScreen;